name: Code Quality

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
  schedule:
    - cron: '0 2 * * 1' # Run every Monday at 2 AM

env:
  NODE_VERSION: '18'

jobs:
  code-quality:
    name: Code Quality Checks
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Run ESLint
      run: |
        npx eslint src/ --ext .js --format json --output-file eslint-report.json || true
        npx eslint src/ --ext .js --format stylish || echo "ESLint found issues"
        
    - name: Run Prettier check
      run: |
        npx prettier --check src/ || echo "Prettier found formatting issues"
        
    - name: Check for console.log statements
      run: |
        if grep -r "console\.log" src/; then
          echo "‚ùå Found console.log statements in production code"
          exit 1
        else
          echo "‚úÖ No console.log statements found"
        fi
        
    - name: Check for TODO comments
      run: |
        echo "üìù TODO comments found:"
        grep -r "TODO\|FIXME\|HACK" src/ || echo "No TODO comments found"
        
    - name: Generate code coverage
      run: |
        npm run test:coverage || echo "No coverage script found"
        
    - name: Upload ESLint report
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: eslint-report
        path: eslint-report.json

  dependency-check:
    name: Dependency Check
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Check for outdated packages
      run: |
        npm outdated || echo "Some packages are outdated"
        
    - name: Check for security vulnerabilities
      run: |
        npm audit --audit-level moderate || echo "Security vulnerabilities found"
        
    - name: Check package-lock.json
      run: |
        if [ -f package-lock.json ]; then
          echo "‚úÖ package-lock.json exists"
        else
          echo "‚ùå package-lock.json missing"
          exit 1
        fi

  firebase-syntax-check:
    name: Firebase Syntax Check
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Install Firebase CLI
      run: npm install -g firebase-tools
      
    - name: Validate firebase.json
      run: |
        firebase projects:list || echo "Firebase CLI validation"
        
    - name: Validate Firestore rules syntax
      run: |
        firebase firestore:rules:test firestore.rules || echo "Firestore rules validation"
        
    - name: Validate Firestore indexes
      run: |
        if [ -f firestore.indexes.json ]; then
          echo "‚úÖ Firestore indexes file exists"
          cat firestore.indexes.json | jq . || echo "‚ùå Invalid JSON in firestore.indexes.json"
        else
          echo "‚ùå firestore.indexes.json missing"
        fi
